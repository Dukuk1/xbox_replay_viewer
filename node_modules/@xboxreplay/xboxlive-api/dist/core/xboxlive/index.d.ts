import { AxiosRequestConfig } from 'axios';
import { XBLAuthorization, SettingsNode, GetUGCQueryString, PlayerScreenshotsResponse, PlayerGameClipsResponse, GetActivityQueryString, ActivityHistoryResponse, MediaHubScreenshotResponseNode, MediaHubGameClipResponseNode, MediaHubResponse, GetMediaHubItemsPayload } from '../..';
export declare const call: <T = any>(config: AxiosRequestConfig | undefined, { userHash, XSTSToken }: XBLAuthorization, XBLContractVersion?: number) => Promise<T>;
export declare const getPlayerXUID: (gamertag: string, authorization: XBLAuthorization) => Promise<string>;
export declare const getPlayerSettings: (gamertagOrXUID: string | number, authorization: XBLAuthorization, settings?: ("GameDisplayPicRaw" | "Gamerscore" | "Gamertag" | "AccountTier" | "XboxOneRep" | "PreferredColor" | "RealName" | "Bio" | "Location" | "ModernGamertag" | "ModernGamertagSuffix" | "UniqueModernGamertag" | "RealNameOverride" | "TenureLevel" | "Watermarks" | "IsQuarantined" | "DisplayedLinkedAccounts")[]) => Promise<SettingsNode>;
export declare const getPlayerActivityHistory: (gamertagOrXUID: string | number, authorization: XBLAuthorization, qs?: GetActivityQueryString) => Promise<ActivityHistoryResponse<any>>;
export declare const getPlayerScreenshots: (gamertagOrXUID: string | number, authorization: XBLAuthorization, qs?: GetUGCQueryString) => Promise<PlayerScreenshotsResponse>;
export declare const getPlayerScreenshotsFromMediaHub: (gamertagOrXUID: string | number, authorization: XBLAuthorization, payload?: GetMediaHubItemsPayload) => Promise<MediaHubResponse<MediaHubScreenshotResponseNode>>;
export declare const getPlayerScreenshotsFromActivityHistory: (gamertagOrXUID: string | number, authorization: XBLAuthorization, qs?: Pick<GetActivityQueryString, "numItems" | "contToken" | "pollingToken" | "startDate">) => Promise<ActivityHistoryResponse<import("../..").ScreenshotsFromActivityHistoryNode>>;
export declare const getPlayerGameClips: (gamertagOrXUID: string | number, authorization: XBLAuthorization, qs?: GetUGCQueryString) => Promise<PlayerGameClipsResponse>;
export declare const getPlayerGameClipsFromMediaHub: (gamertagOrXUID: string | number, authorization: XBLAuthorization, payload?: GetMediaHubItemsPayload) => Promise<MediaHubResponse<MediaHubGameClipResponseNode>>;
export declare const getPlayerGameClipsFromActivityHistory: (gamertagOrXUID: string | number, authorization: XBLAuthorization, qs?: Pick<GetActivityQueryString, "numItems" | "contToken" | "pollingToken" | "startDate">) => Promise<ActivityHistoryResponse<import("../..").GameClipsFromActivityHistoryNode>>;
